version: '3'

services:
  redhat:
    image: gc_redhat
    container_name: redhat_ksh
    ports:
      - "24:22"
      - "9025:9021"
    volumes:
      - {YOUR_DIRECTORY}:/mnt    
      - /mnt/raid/pgdata/main:/var/lib/postgresql/data    # mount postgresql data dir >> {local_dir}:{container_dir}
    environment:
    #  POSTGRES_HOST: postgres                               
    #  POSTGRES_DB: postgres                                      # set db name
    #  POSTGRES_USER: postgres                                    # set db user
      POSTGRES_PASSWORD: gcai123!                         # set db password
    depends_on:
      - postgres 
    networks:
      - mynetwork
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

# psql -h postgres -U {USERNMAE}
  postgres:
    image: postgres:14-alpine
    container_name: postgres_ksh
    environment:
    #  POSTGRES_DB: postgres                                      # set db name
    #  POSTGRES_USER: postgres
      PGDATA: /var/lib/postgresql/data  # PGDATA 환경변수 설정                                    # set db user
      POSTGRES_PASSWORD: gcai123!                                # set db password
    volumes:
      - /mnt/raid/pgdata/main:/var/lib/postgresql/data      # mount postgresql data dir >> {local_dir}:{container_dir}
    ports:
      - "5345:5432"
    restart: always
    networks:
      - mynetwork

# redis-cli -h redis
  redis:
    image: redis:latest
    container_name: redis_ksh
    ports:
      - "6382:6379"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    restart: always
    networks:
      - mynetwork

# localhost:8080/pgadmin4
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_ksh
    environment:
      PGADMIN_DEFAULT_EMAIL: gcai001127@gmail.com          # set pgadmin4 email
      PGADMIN_DEFAULT_PASSWORD: gcai123!                    # set pgadmin4 pw  
    ports:
      - "8082:80"
    depends_on:
      - postgres
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper_ksh
    ports:
      - "2184:2181"
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka_ksh
    ports:
      - "9095:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge