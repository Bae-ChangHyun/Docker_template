# Install redis, zookeeper, pgadmin4, on redhat container
version: '3'

services:
  redhat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
       VENV_NAME: ${VENV_NAME}
       REQUIREMENTS_PATH: ${REQUIREMENTS_PATH}
    image: redhat/ubi8:8.6_custom
    container_name: redhat
    privileged: true
    ports:
      - "${REDHAT_PORT}:9000"
    volumes:
      - "${MOUNT_DIR}:${MOUNT_DIR}"    # mount project dir >> {local_dir}:{container_dir}
    networks:
      - mynetwork
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

# redis-cli -h redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    restart: always
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    networks:
      - mynetwork

  # localhost:8080/pgadmin4
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}          # set pgadmin4 email
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}    # set pgadmin4 pw  
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - mynetwork
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "${KAFKA_OUTSIDE_PORT}:9092"  
      - "9093:9093" 
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:${KAFKA_OUTSIDE_PORT}
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:${KAFKA_OUTSIDE_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "${KAFKA_UI_PORT}:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
    networks:
      - mynetwork

  # psql -h postgres -U {USERNMAE}
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}                                      
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      PGDATA: /var/lib/postgresql/data                              
    volumes:
      - ${DB_MOUNT_DIR}:/var/lib/postgresql/data      
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge